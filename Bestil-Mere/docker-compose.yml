version: '3.4'

services:
  frontend:
    image: ${DOCKER_REGISTRY}frontend
    build:
      context: .
      dockerfile: Frontend/Dockerfile
    ports:
      - "443:443"
      - "80:80"

  customerapi:
    image: ${DOCKER_REGISTRY}customerapi
    build:
      context: .
      dockerfile: CustomerAPI/Dockerfile
    ports:
      - "53000:80"

  orderapi:
    image: ${DOCKER_REGISTRY}orderapi
    build:
      context: .
      dockerfile: OrderAPI/Dockerfile
    ports:
      - "53001:80"

  logisticsapi:
    image: ${DOCKER_REGISTRY}logisticsapi
    build:
      context: .
      dockerfile: LogisticsAPI/Dockerfile
    ports:
      - "53002:80"

  restaurantapi:
    image: ${DOCKER_REGISTRY}restaurantapi
    build:
      context: .
      dockerfile: RestaurantAPI/Dockerfile
    ports:
      - "53003:80"

  gateway:
    image: ${DOCKER_REGISTRY}gateway
    build:
      context: .
      dockerfile: Gateway/Dockerfile
    ports:
      - "53004:80"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
     - "53100:15672"
     - "5672:5672"
    volumes:
     - rabbitmq:/var/lib/rabbitmq
    environment:
     - RABBITMQ_ERLANG_COOKIE=cluster_cookie
     - RABBITMQ_DEFAULT_USER=admin
     - RABBITMQ_DEFAULT_PASS=admin  

  mongodb:
    image: mongo:latest
    ports:
     - "53200:27017"
    volumes:
     - db-data:/data/db
     - mongo-config:/data/configdb

  paymentapi:
    image: ${DOCKER_REGISTRY}paymentapi
    build:
      context: .
      dockerfile: PaymentAPI/Dockerfile
    ports:
      - "5004:80"
  redis:
    image: redis
    environment:
     - REDIS_PASSWORD=redis
volumes:
  db-data:
  mongo-config:
  rabbitmq:
